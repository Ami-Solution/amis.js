[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/constants/appConstants.js",
    "content": "import Web3 from 'web3';\nimport contract from 'truffle-contract';\nimport ethToolbox from 'eth-toolbox';\nimport SignerProvider from 'ethjs-provider-signer';\nimport { sign } from 'ethjs-signer';\n\nimport DetherJson from 'dethercontract/contracts/DetherInterface.json';\nimport DetherStorageJson from 'dethercontract/contracts/DetherStorage.json';\nimport { mock, mockStorage } from '../mock/contract-mock';\n\nexport const GAS_PRICE = 25000000000;\n\nexport const PROVIDER_URL = process.env.DETHER_ETHEREUM_PROVIDER;\nexport const UTILITYWEB3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n\n/**\n * [getContractInstance description]\n * @param  {[type]} provider [description]\n * @return {[type]}          [description]\n */\nexport const getContractInstance = (provider) =>\n  new Promise(async (res, rej) => {\n    if (!provider) return rej(new TypeError('Invalid provider URL'));\n    if (provider === 'test') return res(mock.deployed());\n\n    const newProvider = new Web3(new Web3.providers.HttpProvider(provider));\n    const DetherContract = contract(DetherJson);\n\n    DetherContract.setProvider(newProvider.currentProvider);\n    return res(DetherContract.deployed());\n});\n\n/**\n * [getContractStorageInstance description]\n * @param  {[type]} provider [description]\n * @return {[type]}          [description]\n */\nexport const getContractStorageInstance = (provider) =>\n  new Promise(async (res, rej) => {\n    if (!provider) return rej(new TypeError('Invalid provider URL'));\n    if (provider === 'test') return res(mockStorage.deployed());\n\n    const newProvider = new Web3(new Web3.providers.HttpProvider(provider));\n    const DetherStorageContract = contract(DetherStorageJson);\n\n    DetherStorageContract.setProvider(newProvider.currentProvider);\n    return res(DetherStorageContract.deployed());\n});\n\n/**\n * [getSignedContractInstance description]\n * @param  {[type]} privateKey [description]\n * @param  {[type]} address [description]\n * @return {[type]}          [description]\n */\nexport const getSignedContractInstance = (privateKey, address, providerUrl) =>\n  new Promise(async (res, rej) => {\n    if (!providerUrl) return rej(new TypeError('Invalid provider URL'));\n    if (providerUrl === 'test') return res(mock.deployed());\n    const DetherContract = contract(DetherJson);\n    const provider = new SignerProvider(providerUrl, {\n      signTransaction: (rawTx, cb) => cb(null, sign(rawTx, ethToolbox.add0x(privateKey))),\n      accounts: cb => cb(null, address),\n    });\n    DetherContract.setProvider(provider);\n    return res(DetherContract.deployed());\n  });\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/constants/appConstants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "GAS_PRICE",
    "memberof": "src/constants/appConstants.js",
    "static": true,
    "longname": "src/constants/appConstants.js~GAS_PRICE",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/constants/appConstants.js",
    "importStyle": "{GAS_PRICE}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "PROVIDER_URL",
    "memberof": "src/constants/appConstants.js",
    "static": true,
    "longname": "src/constants/appConstants.js~PROVIDER_URL",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/constants/appConstants.js",
    "importStyle": "{PROVIDER_URL}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "UTILITYWEB3",
    "memberof": "src/constants/appConstants.js",
    "static": true,
    "longname": "src/constants/appConstants.js~UTILITYWEB3",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/constants/appConstants.js",
    "importStyle": "{UTILITYWEB3}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "getContractInstance",
    "memberof": "src/constants/appConstants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/constants/appConstants.js~getContractInstance",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/constants/appConstants.js",
    "importStyle": "{getContractInstance}",
    "description": "[getContractInstance description]",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "getContractStorageInstance",
    "memberof": "src/constants/appConstants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/constants/appConstants.js~getContractStorageInstance",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/constants/appConstants.js",
    "importStyle": "{getContractStorageInstance}",
    "description": "[getContractStorageInstance description]",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "getSignedContractInstance",
    "memberof": "src/constants/appConstants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/constants/appConstants.js~getSignedContractInstance",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/constants/appConstants.js",
    "importStyle": "{getSignedContractInstance}",
    "description": "[getSignedContractInstance description]",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "privateKey",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n * detherGateway\n * @author Dether TEAM\n */\n\nimport 'babel-polyfill';\nimport tellers from './tellers';\n\nexport default {\n  // tellers\n  tellers,\n};\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/mock/contract-mock.js",
    "content": "import BigNumber from 'bignumber.js';\n\nconst instance = {\n  getTellerPos: () =>\n      new Promise(resolve => {\n        resolve([new BigNumber(123444), new BigNumber(123444),\n          new BigNumber(123444), new BigNumber(123444)]);\n      }),\n  getTellerProfile: () =>\n      new Promise(resolve => {\n        resolve([new BigNumber(123444), new BigNumber(123444), new BigNumber(123444), '0x4861727279000000000000000000000000000000000000000000000000000000', new BigNumber(123444), new BigNumber(123444), '0x4861727279000000000000000000000000000000000000000000000000000000']);\n      }),\n  sendCoin: () =>\n      new Promise(resolve => {\n        resolve({\n          logs: [{\n          event: 'SendCoin',\n          args: {\n            _from: '0x000000000000', _to: '0x100000000000', amount: 10000000, lat: 123000, lng: 321000,\n          },\n        }],\n      });\n    }),\n  withdrawAll: () =>\n      new Promise(resolve => {\n        resolve({\n          logs: [{\n            event: 'Withdraw',\n            args: {\n              amount: 12300000, lat: 123000, lng: 321000,\n            },\n          }],\n        });\n      }),\n  getTellerBalances: {\n    call: () =>\n      new Promise(resolve => {\n          resolve(new BigNumber(1000000000000000000000));\n      }),\n  },\n  registerPoint: () =>\n    new Promise(resolve => {\n      resolve('0x000000000000000000000000000');\n  }),\n};\n\nexport const mock = {\n  setProvider: () => {},\n  at: () => instance,\n  deployed: () => instance,\n};\n\n\nconst storageInstance = {\n  getAllTellers: () =>\n    new Promise(res => {\n      res([\n        '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n        '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n        '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n        '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n        '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n        '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n        '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb621',\n      ]);\n    }),\n  getZone: {\n    call: () =>\n      new Promise(res => {\n        res([\n          '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n          '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n          '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n          '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n          '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n          '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb623',\n          '0x0c6dd5b28707a045f3a0c7429ed3fb9f835cb621',\n        ]);\n      }),\n  },\n};\n\nexport const mockStorage = {\n  setProvider: () => {},\n  at: () => storageInstance,\n  deployed: () => storageInstance,\n};\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/mock/contract-mock.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/mock/contract-mock.js",
    "static": true,
    "longname": "src/mock/contract-mock.js~instance",
    "access": "public",
    "export": false,
    "importPath": "dethergateway/src/mock/contract-mock.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"getTellerPos\": *, \"getTellerProfile\": *, \"sendCoin\": *, \"withdrawAll\": *, \"getTellerBalances\": *, \"registerPoint\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "mock",
    "memberof": "src/mock/contract-mock.js",
    "static": true,
    "longname": "src/mock/contract-mock.js~mock",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/mock/contract-mock.js",
    "importStyle": "{mock}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "{\"setProvider\": *, \"at\": *, \"deployed\": *}"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "storageInstance",
    "memberof": "src/mock/contract-mock.js",
    "static": true,
    "longname": "src/mock/contract-mock.js~storageInstance",
    "access": "public",
    "export": false,
    "importPath": "dethergateway/src/mock/contract-mock.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "{\"getAllTellers\": *, \"getZone\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "mockStorage",
    "memberof": "src/mock/contract-mock.js",
    "static": true,
    "longname": "src/mock/contract-mock.js~mockStorage",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/mock/contract-mock.js",
    "importStyle": "{mockStorage}",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "{\"setProvider\": *, \"at\": *, \"deployed\": *}"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/tellers/addTellers.js",
    "content": "import ethToolbox from 'eth-toolbox';\nimport Web3 from 'web3';\n\nimport { GAS_PRICE, getSignedContractInstance } from '../constants/appConstants';\n\nconst check = (teller) => {\n  if (!teller.lat || Number.isNaN(teller.lat) || teller.lat > 90 || teller.lat < -90) {\n    return { error: true, msg: 'Invalid latitude' };\n  }\n  if (!teller.lng || Number.isNaN(teller.lng) || teller.lng > 180 || teller.lng < -180) {\n    return { error: true, msg: 'Invalid longitude' };\n  }\n  if (!teller.zone || !Number.isInteger(teller.zone)) {\n    return { error: true, msg: 'Invalid zone' };\n  }\n  if (!teller.rates || teller.rates <= 0 || teller.rates > 100) {\n    return { error: true, msg: 'Invalid rates' };\n  }\n  if (!teller.avatar || !Number.isInteger(teller.avatar) || teller.avatar < 0) {\n    return { error: true, msg: 'Invalid avatar' };\n  }\n  if (!teller.currency || !Number.isInteger(teller.currency) || teller.currency < 0) {\n    return { error: true, msg: 'Invalid currency' };\n  }\n  if (!teller.telegram || teller.telegram.length < 3 || teller.telegram.length > 30) {\n    return { error: true, msg: 'Invalid telegram' };\n  }\n  if (!teller.amount || Number.isNaN(teller.amount) || teller.amount < 0.01) {\n    return { error: true, msg: 'Invalid amount' };\n  }\n  if (!teller.username || teller.username.length < 3 || teller.username.length > 30) {\n    return { error: true, msg: 'Invalid username' };\n  }\n  if (!teller.keystore) {\n    return { error: true, msg: 'Invalid keystore' };\n  }\n  if (!teller.password || teller.password.length < 1) {\n    return { error: true, msg: 'Invalid password' };\n  }\n  if (!teller.providerUrl) {\n    return { error: true, msg: 'Invalid provider url' };\n  }\n  // if (!teller.gasPrice || teller.gasPrice < 0) {\n  //   return { error: true, msg: 'Invalid gas Price' };\n  // }\n  return {};\n};\n\n// gas used = 223319\n// gas price average (mainnet) = 25000000000 wei\n// 250000 * 25000000000 = 0.006250000000000000 ETH\n// need 0.006250000000000000 ETH to process this function\n/**\n * @param {number} lat latitude min -90 max +90\n * @param {number} lng longitude min -180 max +180\n * @param {string} zone geographic zone\n * @param {number} rates Margin (0-100 * 100)\n * @param {number} avatar (1-9)\n * @param {number} currency number (0-4)\n * @param {string} telegam pseudo telegram\n * @param {number} amount escrow\n * @param {string} username username\n * @param {object} keystore deserialize keystore\n * @param {string} password\n * @param {string} providerUrl\n * @return {object} Return txs\n */\nconst dtrRegisterPoint = async (teller) =>\n  new Promise(async (res, rej) => {\n    const secu = check(teller);\n    if (secu.error) return rej(new TypeError(secu.msg));\n\n    try {\n      const key = await ethToolbox.decodeKeystore(teller.keystore, teller.password);\n      if (!key || !key.privateKey || !key.address || !ethToolbox.utils.isAddr(key.address)) {\n        return rej(new TypeError('Invalid keystore or password'));\n      }\n\n      const dtrContractInstance =\n        await getSignedContractInstance(key.privateKey, key.address, teller.providerUrl);\n\n      const utilityWeb3 = new Web3(new Web3.providers.HttpProvider(teller.providerUrl));\n\n      let tsxAmount = parseInt(utilityWeb3.toWei(teller.amount, 'ether'), 10);\n\n      if (teller.providerUrl !== 'test') {\n        const balance = await utilityWeb3.eth.getBalance(key.address);\n         // check if enough gas is present to sendCoin once after registering\n         if (balance.toNumber() < (tsxAmount + (GAS_PRICE * 650000))) {\n           tsxAmount = balance.toNumber() - (GAS_PRICE * 650000);\n           if (tsxAmount < 0.0025) return rej(new TypeError('Insufficient funds'));\n         }\n      }\n      const result = await dtrContractInstance.registerPoint(\n        teller.lat.toFixed(6) * (10 ** 5),\n        teller.lng.toFixed(6) * (10 ** 5),\n        teller.zone,\n        teller.rates * 100,\n        teller.avatar,\n        teller.currency,\n        teller.telegram,\n        teller.username,\n        {\n          from: ethToolbox.utils.add0x(key.address),\n          value: parseInt(tsxAmount, 10),\n          gas: 450000,\n          gasPrice: GAS_PRICE,\n        },\n      );\n      return res({\n          from: ethToolbox.utils.add0x(key.address),\n          to: dtrContractInstance.address,\n          value: teller.amount,\n          date: new Date().toLocaleString('en-US', { hour12: false }),\n          dether: {\n            detherContract: true,\n            receive: false,\n          },\n          etherscan: {\n            kovan: `https://kovan.etherscan.io/tx/${result}`,\n            ropsten: `https://ropsten.etherscan.io/tx/${result}`,\n            ether: `https://etherscan.io/tx/${result}`,\n          },\n      });\n    } catch (e) {\n      return rej(new TypeError(e));\n    }\n  });\n\nexport default dtrRegisterPoint;\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/tellers/addTellers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "check",
    "memberof": "src/tellers/addTellers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tellers/addTellers.js~check",
    "access": "public",
    "export": false,
    "importPath": "dethergateway/src/tellers/addTellers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "teller",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "dtrRegisterPoint",
    "memberof": "src/tellers/addTellers.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/tellers/addTellers.js~dtrRegisterPoint",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/addTellers.js",
    "importStyle": "dtrRegisterPoint",
    "description": "",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lat",
        "description": "latitude min -90 max +90"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lng",
        "description": "longitude min -180 max +180"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "zone",
        "description": "geographic zone"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rates",
        "description": "Margin (0-100 * 100)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "avatar",
        "description": "(1-9)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "currency",
        "description": "number (0-4)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "telegam",
        "description": "pseudo telegram"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "escrow"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "username"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "keystore",
        "description": "deserialize keystore"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "providerUrl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Return txs"
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/tellers/deleteSellPoint.js",
    "content": "import ethToolbox from 'eth-toolbox';\n\nimport { getSignedContractInstance } from '../constants/appConstants';\n\n// gas used = 26497\n// gas price average (mainnet) = 25000000000 wei\n// 50000 * 25000000000 = 0.001250000000000000 ETH\n// need 0.001250000000000000 ETH to process this function\n/**\n * Delete sell point, this function withdraw automatically balance escrow to owner\n * @param  {object}  keystore deserialize keystore\n * @param  {string}  password\n * @return {Promise}\n */\nconst withdrawAll = (keystore, password, providerUrl) =>\n  new Promise(async (res, rej) => {\n    if (!keystore) return rej(new TypeError('Invalid keystore'));\n    if (!password) return rej(new TypeError('Invalid password'));\n    if (!providerUrl) return rej(new TypeError('Invalid provider Url'));\n\n    try {\n      const key = await ethToolbox.decodeKeystore(keystore, password);\n\n      if (!key || !key.privateKey || !key.address || !ethToolbox.utils.isAddr(key.address)) {\n        return rej(new TypeError('Invalid keystore or password'));\n      }\n\n      const dtrContractInstance =\n        await getSignedContractInstance(key.privateKey, key.address, providerUrl);\n\n      return res(dtrContractInstance\n        .withdrawAll({\n            from: key.address,\n            gas: 100000,\n            gasPrice: 25000000000,\n          }));\n    } catch (e) {\n      return rej(new TypeError(e));\n    }\n  });\n\nexport default withdrawAll;\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/tellers/deleteSellPoint.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "withdrawAll",
    "memberof": "src/tellers/deleteSellPoint.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tellers/deleteSellPoint.js~withdrawAll",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/deleteSellPoint.js",
    "importStyle": "withdrawAll",
    "description": "Delete sell point, this function withdraw automatically balance escrow to owner",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "keystore",
        "description": "deserialize keystore"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/tellers/dtrSendCoin.js",
    "content": "import ethToolbox from 'eth-toolbox';\n\nimport { UTILITYWEB3, getSignedContractInstance } from '../constants/appConstants';\n\nconst check = (tsx) => {\n  if (!tsx.receiver) {\n    return { error: true, msg: 'Invalid receiver' };\n  }\n  if (!tsx.amount || Number.isNaN(tsx.amount) || tsx.amount < 0.001) {\n    return { error: true, msg: 'Invalid amount' };\n  }\n  if (!tsx.keystore || (typeof tsx.keystore) !== 'object') {\n    return { error: true, msg: 'No keystore provided' };\n  }\n  if (!tsx.password || (typeof tsx.password) !== 'string' || tsx.password.length < 1) {\n    return { error: true, msg: 'Invalid password' };\n  }\n  if (!tsx.provider) {\n    return { error: true, msg: 'No provider provided' };\n  }\n  return {};\n};\n\n// gas used = 95481\n// gas price average (mainnet) = 25000000000 wei\n// 115000 * 25000000000 = 0.002875000000000000 ETH\n// need 0.006250000000000000 ETH to process this function\n/**\n * Send eth from escrow\n * @param  {string}  receiver ethereum address\n * @param  {number}  amount   max balance\n * @param  {object}  keystore deserialise keystore\n * @param  {string}  password\n * @param  {string}  provider\n * @return {Promise}\n */\n// const dtrSendCoin = async (receiver, amount, keystore, password, provider) =>\nconst dtrSendCoin = async (tsx) =>\n  new Promise(async (res, rej) => {\n    const secu = check(tsx);\n    if (secu.error) return rej(new TypeError(secu.msg));\n\n    const key = await ethToolbox.decodeKeystore(tsx.keystore, tsx.password);\n    if (!key || !key.privateKey || !key.address || !ethToolbox.utils.isAddr(key.address)) {\n      return rej(new TypeError('Invalid keystore or password'));\n    }\n\n    try {\n      const dtrContractInstance =\n        await getSignedContractInstance(key.privateKey, key.address, tsx.provider);\n      return res(dtrContractInstance.sendCoin(\n        ethToolbox.utils.add0x(tsx.receiver),\n        parseInt(UTILITYWEB3.toWei(tsx.amount, 'ether'), 10),\n        {\n          from: key.address,\n          gas: 200000,\n          gasPrice: 25000000000,\n        },\n      ));\n    } catch (e) {\n      return rej(new TypeError(e));\n    }\n  });\n\nexport default dtrSendCoin;\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/tellers/dtrSendCoin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "check",
    "memberof": "src/tellers/dtrSendCoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tellers/dtrSendCoin.js~check",
    "access": "public",
    "export": false,
    "importPath": "dethergateway/src/tellers/dtrSendCoin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "tsx",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "dtrSendCoin",
    "memberof": "src/tellers/dtrSendCoin.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/tellers/dtrSendCoin.js~dtrSendCoin",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/dtrSendCoin.js",
    "importStyle": "dtrSendCoin",
    "description": "Send eth from escrow",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": "ethereum address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "max balance"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "keystore",
        "description": "deserialise keystore"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/tellers/getBalance.js",
    "content": "import ethToolbox from 'eth-toolbox';\n\nimport { UTILITYWEB3, getContractInstance } from '../constants/appConstants';\n\n\n/**\n * get dtr balance\n * @param  {string}  address ethereum address\n * @return {Promise}\n */\nconst getBalance = async (address, providerUrl) =>\n  new Promise(async (res, rej) => {\n    if (!ethToolbox.utils.isAddr(address)) return rej(new TypeError('Invalid ETH address'));\n    if (!providerUrl) return rej(new TypeError('No provider url'));\n\n    try {\n      const dtrContractInstance = await getContractInstance(providerUrl);\n\n      if (!dtrContractInstance) return rej(new TypeError('Invalid provider URL'));\n\n      const result = await dtrContractInstance.getTellerBalances\n        .call(ethToolbox.utils.add0x(address));\n\n      if (Number.isNaN(Number(result))) return res(0);\n\n      return res(Number(UTILITYWEB3.fromWei(result.toNumber(), 'ether')));\n    } catch (e) {\n      return rej(new TypeError(e));\n    }\n  });\n\nexport default getBalance;\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/tellers/getBalance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "getBalance",
    "memberof": "src/tellers/getBalance.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/tellers/getBalance.js~getBalance",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/getBalance.js",
    "importStyle": "getBalance",
    "description": "get dtr balance",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "ethereum address"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/tellers/getTellers.js",
    "content": "import {\n  getContractStorageInstance,\n  getContractInstance,\n  UTILITYWEB3,\n} from '../constants/appConstants';\n\n/**\n * get teller by address\n * @param  {string}  address ethereum address\n * @return {object} return teller\n */\nexport const dtrGetTeller = (address, providerUrl) =>\n  new Promise(async (res, rej) => {\n    try {\n      const dtrContractInstance = await getContractInstance(providerUrl);\n      if (!dtrContractInstance) return rej(new TypeError('Invalid provider URL'));\n\n      const tellerPos = await dtrContractInstance.getTellerPos(address);\n      if (!tellerPos) return rej(new TypeError('Invalid Teller Position'));\n\n      if (tellerPos[3].toNumber() === 0) return res(null);\n\n      const tellerProfile = await dtrContractInstance.getTellerProfile(address);\n      if (!tellerProfile) return rej(new TypeError('Invalid Teller Profile'));\n\n      return res({\n        name: UTILITYWEB3.toUtf8(tellerProfile[3]) || 'Dether',\n        messengerAddr: UTILITYWEB3.toUtf8(tellerProfile[6]) || 'Dether_io',\n        lat: tellerPos[0].toNumber() / (10 ** 5) || 48.864716,\n        lng: tellerPos[1].toNumber() / (10 ** 5) || 2.349014,\n        zoneId: tellerPos[2].toNumber(),\n        escrowBalance: Number(UTILITYWEB3.fromWei(tellerPos[3].toNumber(), 'ether')) || 0,\n        rates: tellerProfile[0].toNumber(),\n        volumeTrade: Number(UTILITYWEB3.fromWei(tellerProfile[1].toNumber(), 'ether')) || 0,\n        nbTrade: tellerProfile[2].toNumber(),\n        currencyId: tellerProfile[4].toNumber(),\n        avatarId: tellerProfile[5].toNumber(),\n        ethAddress: address,\n        id: address,\n      });\n    } catch (e) {\n      return rej(new TypeError(e));\n    }\n  });\n\n/**\n * Get All tellers per zone\n * @param  {string}  zone\n * @return {array} return array of tellers\n */\nexport const getTellersPerZone = (zone, providerUrl) =>\n  new Promise(async (res, rej) => {\n    try {\n      const dtrContractStorageInstance = await getContractStorageInstance(providerUrl);\n      if (!dtrContractStorageInstance) return rej(new TypeError('Invalid provider URL'));\n\n      const tellersAddressesInZone = await dtrContractStorageInstance.getZone.call(zone);\n      if (!tellersAddressesInZone || !tellersAddressesInZone.length) return res([]);\n\n      const tellers = [];\n\n      await Promise.all(tellersAddressesInZone.map(async (addr) => {\n        const teller = await dtrGetTeller(addr, providerUrl);\n\n        if (teller\n            && teller.zoneId === parseInt(zone, 10)\n            && !tellers.find((tel) => tel.ethAddress === teller.ethAddress)) {\n          tellers.push(teller);\n        }\n      }));\n\n      return res(tellers);\n    } catch (e) {\n      return rej(new TypeError(e));\n    }\n  });\n\n/**\n * Get All tellers on the map\n * @return {array} return array of tellers\n */\nexport const getAllTellers = (providerUrl) =>\n  new Promise(async (res, rej) => {\n    try {\n      const dtrContractStorageInstance = await getContractStorageInstance(providerUrl);\n      if (!dtrContractStorageInstance) return rej(new TypeError('Invalid provider URL'));\n\n      const tellersAddresses = await dtrContractStorageInstance.getAllTellers();\n      if (!tellersAddresses || !tellersAddresses.length) return res([]);\n\n      const tellers = [];\n\n      await Promise.all(tellersAddresses.map(async (addr) => {\n        const teller = await dtrGetTeller(addr, providerUrl);\n\n        if (teller && !tellers.find((tel) => tel.ethAddress === teller.ethAddress)) {\n          tellers.push(teller);\n        }\n      }));\n\n      return res(tellers);\n    } catch (e) {\n      return rej(new TypeError(e));\n    }\n  });\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/tellers/getTellers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "dtrGetTeller",
    "memberof": "src/tellers/getTellers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tellers/getTellers.js~dtrGetTeller",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/getTellers.js",
    "importStyle": "{dtrGetTeller}",
    "description": "get teller by address",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "ethereum address"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "return teller"
    }
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "getTellersPerZone",
    "memberof": "src/tellers/getTellers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tellers/getTellers.js~getTellersPerZone",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/getTellers.js",
    "importStyle": "{getTellersPerZone}",
    "description": "Get All tellers per zone",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "zone",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "return array of tellers"
    }
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "getAllTellers",
    "memberof": "src/tellers/getTellers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tellers/getTellers.js~getAllTellers",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/getTellers.js",
    "importStyle": "{getAllTellers}",
    "description": "Get All tellers on the map",
    "lineNumber": 82,
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "return array of tellers"
    },
    "params": [
      {
        "name": "providerUrl",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/tellers/index.js",
    "content": "import dtrRegisterPoint from './addTellers';\nimport getBalance from './getBalance';\nimport withdrawAll from './deleteSellPoint';\nimport {\n  dtrGetTeller,\n  getTellersPerZone,\n  getAllTellers,\n} from './getTellers';\n\nconst tellers = {\n  // Add teller\n  add: dtrRegisterPoint,\n\n  // Get Tellers\n  get: dtrGetTeller,\n  getZone: getTellersPerZone,\n  getAll: getAllTellers,\n\n  // Get Teller balance\n  balance: getBalance,\n\n  // Remove teller\n  del: withdrawAll,\n};\n\nexport default tellers;\n",
    "static": true,
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/src/tellers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "tellers",
    "memberof": "src/tellers/index.js",
    "static": true,
    "longname": "src/tellers/index.js~tellers",
    "access": "public",
    "export": true,
    "importPath": "dethergateway/src/tellers/index.js",
    "importStyle": "tellers",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"add\": *, \"get\": *, \"getZone\": *, \"getAll\": *, \"balance\": *, \"del\": *}"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# detherGateway [![Build Status](https://travis-ci.com/dethertech/detherGateway.svg?token=kdsX9Y3G2xZ5ptCyzuYL&branch=master)](https://travis-ci.com/dethertech/detherGateway) ![npm](https://img.shields.io/npm/v/detherGateway.svg)\nDether Gateway\n\n## Table of Contents\n\n* [Get Started](#get-started)\n* [Usages](#usages)\n    * [Add tellers](#add-tellers)\n    * [Get teller](#get-teller)\n    * [Get zone](#get-zone)\n    * [Get all](#get-all)\n    * [Get balance](#get-balance)\n    * [Delete teller](#delete-teller)\n* [Install](#install)\n* [Example](#example)\n* [Dev](#dev)\n* [Test](#test)\n* [Build doc](#build-doc)\n* [Dependencies](#dependencies)\n* [Dev Dependencies](#dev-dependencies)\n* [Bugs](#bugs)\n* [License](#license)\n* [Donation](#donation)\n\n## Usages\n\n### Add tellers\n```javascript\nconst tellers = detherGateway.tellers.add(teller);\n```\n\n#### Inputs\n\n* `teller`: Ethereum address\n* `lat` latitude min -90 max +90\n* `lng` longitude min -180 max +180\n* `zone` geographic zone\n* `rates` Margin (0-100 * 100)\n* `avatar` (1-9)\n* `currency` number (0-4)\n* `telegam` pseudo telegram\n* `amount` escrow\n* `username` username\n* `keystore` deserialize keystore\n* `password` string\n* `providerUrl`string\n\n#### Return value\n```javascript\n{\n    from: ethToolbox.utils.add0x(key.address),\n    to: dtrContractInstance.address,\n    value: teller.amount,\n    date: new Date().toLocaleString('en-US', { hour12: false }),\n    dether: {\n      detherContract: true,\n      receive: false,\n    },\n    etherscan: {\n      kovan: `https://kovan.etherscan.io/tx/${result}`,\n      ropsten: `https://ropsten.etherscan.io/tx/${result}`,\n      ether: `https://etherscan.io/tx/${result}`,\n    }\n  }\n```\n\n### Get teller\n```javascript\nconst tellers = detherGateway.tellers.get(address);\n```\n\n#### Inputs\n\n* `address`: Ethereum address\n\n#### Return value\n```javascript\n{\n  name: UTILITYWEB3.toUtf8(tellerProfile[3]) || 'Dether',\n  messengerAddr: UTILITYWEB3.toUtf8(tellerProfile[6]) || 'Dether_io',\n  lat: tellerPos[0].toNumber() / (10 ** 5) || 48.864716,\n  lng: tellerPos[1].toNumber() / (10 ** 5) || 2.349014,\n  zoneId: tellerPos[2].toNumber(),\n  escrowBalance: Number(UTILITYWEB3.fromWei(tellerPos[3].toNumber(), 'ether')) || 0,\n  rates: tellerProfile[0].toNumber(),\n  volumeTrade: Number(UTILITYWEB3.fromWei(tellerProfile[1].toNumber(), 'ether')) || 0,\n  nbTrade: tellerProfile[2].toNumber(),\n  currencyId: tellerProfile[4].toNumber(),\n  avatarId: tellerProfile[5].toNumber(),\n  ethAddress: address,\n  id: address,\n}\n```\n\n### Get zone\n```javascript\nconst tellers = detherGateway.tellers.getZone(countryCode);\n```\n\n#### Inputs\n\n* `countryCode`: Geocoding country CODE (only the digit)\n\n#### Return value\n* {array} array of tellers\n\n\n### Get all\n```javascript\nconst tellers = detherGateway.tellers.getAll();\n```\n\n#### Inputs\n\n* .\n\n#### Return value\n* {array} array of all tellers\n\n\n### Get balance\n```javascript\nconst tellers = detherGateway.tellers.balance(address);\n```\n\n#### Inputs\n\n* `address`: Tellers Ethereum address\n\n#### Return value\n* balance of tellers\n\n\n### Delete teller\n```javascript\nconst tellers = detherGateway.tellers.del(address);\n```\n\n#### Inputs\n\n* `address`: Tellers Ethereum address\n\n#### Return value\n* balance of tellers\n\n\n## Install\n```\n// use npm\nnpm install --save detherGateway\n\n// use yarn\nyarn add detherGateway\n```\n\n## Example\n```\ngit clone https://github.com/dethertech/detherGateway.git\ncd detherGateway/examples\nyarn\nyarn run example\n```\n\n## Dev\n```\ngit clone https://github.com/dethertech/detherGateway.git\ncd detherGateway\nyarn\n```\n\n## Test\n```\nnpm test\n```\n\n## Build doc\n```\n# Install ESDoc\nyarn\n\n# Run ESDoc.\nyarn run:doc\n```\n\n## Dependencies\n\n* [dethercontract](https://github.com/dethertech/dethercontracts.git)\n* [dotenv](https://github.com/motdotla/dotenv)\n* [eth-toolbox](https://github.com/dethertech/eth-toolbox)\n* [ethjs-provider-signer](https://github.com/ethjs/ethjs-provider-signer)\n* [ethjs-signer](https://github.com/ethjs/ethjs-signer)\n* [truffle-contract](https://github.com/trufflesuite/truffle-contract)\n* [web3](https://github.com/ethereum/web3.js/)\n\n\n## Dev Dependencies\n\n* [babel-cli](https://github.com/babel/babel/tree/master/packages/babel-cli)\n* [babel-core](https://github.com/babel/babel/tree/master/packages/babel-core)\n* [babel-eslint](https://github.com/babel/babel-eslint)\n* [babel-polyfill](https://github.com/babel/babel/tree/master/packages/babel-polyfill)\n* [babel-preset-latest](https://github.com/babel/babel/tree/master/packages/babel-preset-latest)\n* [bignumber.js](https://github.com/MikeMcl/bignumber.js)\n* [chai](https://github.com/chaijs/chai)\n* [chai-as-promised](https://github.com/domenic/chai-as-promised)\n* [esdoc](https://github.com/esdoc/esdoc)\n* [esdoc-standard-plugin](https://github.com/esdoc/esdoc-plugins)\n* [eslint](https://github.com/eslint/eslint)\n* [eslint-config-airbnb-base](https://github.com/airbnb/javascript)\n* [eslint-plugin-import](https://github.com/benmosher/eslint-plugin-import)\n* [mocha](https://github.com/mochajs/mocha)\n\n## Bugs\n\nWhen you find issues, please report them:\n\n* web: [https://github.com/dethertech/detherGateway/issues](https://github.com/dethertech/detherGateway/issues)\n\n## License\n\n* __MIT__: [http://opensource.org/licenses/MIT](http://opensource.org/licenses/MIT)\n\n## Donation\n* [Ethereum Fundation](https://ethereum.org/donate)\n* [Etherscan](https://etherscan.io/address/0x71c7656ec7ab88b098defb751b7401b5f6d8976f)\n* [MyEtherWallet](https://etherscan.io/address/0x7cB57B5A97eAbe94205C07890BE4c1aD31E486A8)\n",
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"dethergateway\",\n  \"version\": \"0.1.2\",\n  \"description\": \"Gateway between Front App and the detherContracts.\",\n  \"main\": \"lib/index.js\",\n  \"scripts\": {\n    \"babel-node\": \"babel-node --presets=es2015\",\n    \"example\": \"npm run babel-node -- examples/app.js\",\n    \"test\": \"mocha --timeout 15000 --compilers js:babel-core/register test/*.js --recursive\",\n    \"prepublish\": \"babel src --out-dir lib\",\n    \"run:doc\": \"./node_modules/.bin/esdoc && open ./docs/index.html\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/dethertech/detherGateway.git\"\n  },\n  \"keywords\": [\n    \"Dether\",\n    \"ethereum\",\n    \"gateway\"\n  ],\n  \"author\": \"Dether Team <hello@dether.io>\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/dethertech/detherGateway/issues\"\n  },\n  \"homepage\": \"https://github.com/dethertech/detherGateway#readme\",\n  \"dependencies\": {\n    \"babel-polyfill\": \"^6.26.0\",\n    \"bignumber.js\": \"^4.1.0\",\n    \"dethercontract\": \"^1.2.5\",\n    \"eth-toolbox\": \"^0.2.3\",\n    \"ethjs-provider-signer\": \"^0.1.4\",\n    \"ethjs-signer\": \"^0.1.1\",\n    \"truffle-contract\": \"^2.0.1\",\n    \"web3\": \"^0.19.1\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.0.1\",\n    \"babel-preset-latest\": \"^6.24.1\",\n    \"chai\": \"^4.1.2\",\n    \"chai-as-promised\": \"^7.1.1\",\n    \"dotenv\": \"^4.0.0\",\n    \"esdoc\": \"^1.0.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.7.2\",\n    \"eslint-config-airbnb-base\": \"^12.0.1\",\n    \"eslint-plugin-import\": \"^2.7.0\",\n    \"eth-lightwallet\": \"^2.5.6\",\n    \"mocha\": \"^3.5.3\"\n  }\n}\n",
    "longname": "/Users/ishakleghlam/Desktop/detherGateway/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]